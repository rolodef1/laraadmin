<?php
/**
 * Controller genrated using LaraAdmin
 * Help: http://laraadmin.com
 */

namespace App\Http\Controllers\apiLA;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Http\Requests;
use Auth;
use DB;
use Validator;
use Datatables;
use Collective\Html\FormFacade as Form;
use Dwij\Laraadmin\Models\Module;
use Dwij\Laraadmin\Models\ModuleFields;

use App\Models\__model_name__;

class __controller_class_name__ extends Controller
{
	public $show_action = true;
	public $view_col = '__view_column__';
	public $listing_cols = ['id', __listing_cols__];
	
	/**
	 * Display a listing of the __module_name__.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index()
	{
        $module = Module::get('__module_name__');	
		$user_id = 0;
		if(isset($_GET['key'])){
			$module_api = Module::get('ApiPermissions');
			if(!empty($module_api)){
				$data_api = DB::table($module_api->name_db)->select('key','user_id')
				->where('key','=',$_GET['key'])
				->whereNull('deleted_at')->first();
				if(!empty($data_api)){
					$user_id = $data_api->user_id;
				}
			}
			
		}

		if(Module::hasAccess($module->id,'view',$user_id)) {			
			$data = DB::table($module->name_db)->select($this->listing_cols)->whereNull('deleted_at');
			return response()->json([
				'status' => true,
				'result' => $data->get(),
				],200);
		} else {
			return response()->json([
				'status' => false,
				'result' => 'No tiene acceso a este servicio',
				],404);
		}
	}

	/**
	 * Store a newly created __singular_var__ in database.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @return \Illuminate\Http\Response
	 */
	public function store(Request $request)
	{
		$user_id = 0;
		if(isset($_GET['key'])){
			$module_api = Module::get('ApiPermissions');
			if(!empty($module_api)){
				$data_api = DB::table($module_api->name_db)->select('key','user_id')
				->where('key','=',$_GET['key'])
				->whereNull('deleted_at')->first();
				if(!empty($data_api)){
					$user_id = $data_api->user_id;
				}
			}
			
		}

		if(Module::hasAccess("__module_name__", "create", $user_id)) {
			$rules = Module::validateRules("__module_name__", $request);			
			$validator = Validator::make($request->all(), $rules);			
			if ($validator->fails()) {
				return response()->json([
					'status' => false,
					'result' => $validator->errors(),
					],200);
			}			
			$insert_id = Module::insert("__module_name__", $request);
			if($insert_id){
				return response()->json([
					'status' => true,
					'result' => $insert_id,
					],200);
			}else{
				return response()->json([
					'status' => false,
					'result' => 'El registro no pudo ser creado',
					],404);
			}			
		} else {
			return response()->json([
				'status' => false,
				'result' => 'No tiene acceso a este servicio',
				],404);
		}
	}

	/**
	 * Display the specified __singular_var__.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id)
	{
		$user_id = 0;
		if(isset($_GET['key'])){
			$module_api = Module::get('ApiPermissions');
			if(!empty($module_api)){
				$data_api = DB::table($module_api->name_db)->select('key','user_id')
				->where('key','=',$_GET['key'])
				->whereNull('deleted_at')->first();
				if(!empty($data_api)){
					$user_id = $data_api->user_id;
				}
			}
			
		}

		if(Module::hasAccess("__module_name__", "view", $user_id)) {			
			$__singular_var__ = __model_name__::find($id);
			if(isset($__singular_var__->id) && $__singular_var__->deleted_at == null) {		
				return response()->json([
					'status' => true,
					'result' => $__singular_var__,
					],200);		
			} else {
				return response()->json([
					'status' => false,
					'result' => 'El registro no existe',
					],404);
			}
		} else {
			return response()->json([
				'status' => false,
				'result' => 'No tiene acceso a este servicio',
				],404);
		}
	}


	/**
	 * Update the specified __singular_var__ in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id)
	{
		$user_id = 0;
		if(isset($_GET['key'])){
			$module_api = Module::get('ApiPermissions');
			if(!empty($module_api)){
				$data_api = DB::table($module_api->name_db)->select('key','user_id')
				->where('key','=',$_GET['key'])
				->whereNull('deleted_at')->first();
				if(!empty($data_api)){
					$user_id = $data_api->user_id;
				}
			}			
		}

		if(Module::hasAccess("__module_name__", "edit", $user_id)) {			
			$rules = Module::validateRules("__module_name__", $request, true);			
			$validator = Validator::make($request->all(), $rules);			
			if ($validator->fails()) {
				return response()->json([
					'status' => false,
					'result' => $validator->errors(),
					],200);
			}			
			$insert_id = Module::updateRow("__module_name__", $request, $id);
			if($insert_id){
				return response()->json([
					'status' => true,
					'result' => $insert_id,
					],200);
			}else{
				return response()->json([
					'status' => false,
					'result' => 'El registro no pudo ser actualizado',
					],404);
			}			
		} else {
			return response()->json([
				'status' => false,
				'result' => 'No tiene acceso a este servicio',
				],404);
		}
	}

	/**
	 * Remove the specified __singular_var__ from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		$user_id = 0;
		if(isset($_GET['key'])){
			$module_api = Module::get('ApiPermissions');
			if(!empty($module_api)){
				$data_api = DB::table($module_api->name_db)->select('key','user_id')
				->where('key','=',$_GET['key'])
				->whereNull('deleted_at')->first();
				if(!empty($data_api)){
					$user_id = $data_api->user_id;
				}
			}			
		}

		if(Module::hasAccess("__module_name__", "delete", $user_id)) {
			__model_name__::find($id)->delete();
			return response()->json([
				'status' => true,
				'result' => $id,
				],200);
		} else {
			return response()->json([
				'status' => false,
				'result' => 'No tiene acceso a este servicio',
				],404);
		}
	}
}
